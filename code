#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#define MAX_QUOTES 100

int main() {
    char *quotes[] = {
        "The only way to do great work is to do what you love.",
        "Don't be afraid to step back from the good to pursue the great.",
        "You can't climb the ladder with your hands in your pockets.",
        "The best time to plant a tree was twenty years ago. The second best time is today.",
        "Believe you can and you are halfway there.",
        "Life is like surfing, the fall doesn't matter but the ride does.",
        "If you see it, you can be it.",
        "The only person you're destined to become is the person you decide to be.",
        "Life is like the weather except it doesn't have a forecast.",
        "The canvas of life is boundless; with imagination as your brush, every stroke can paint the extraordinary.",
        "Money is a currency but so is love.",
        "If money is a bush, love and compansion is a tree.",
        "The ones who rule the future believe in the beauty of their dreams.",
        "The haters gonna hate but keep yoru mind straight. Their hate means their afraid.",
        "Dream big, do bigger.",
        "What's done is done, but what you do is not.",
        "Those who can trustothers are great, but thsoe who can also trust themselves are the greatest.",
        "If you see it, go be it.",
        "They say go with the flow, instead go with the mojo.",
        "Why stop unless you're done.",
        "The medal holds the glory, but the finish lines holds the vicotry.",
        "Prizes lasts for years, but the experience lasts for a lifetime.",
        "They ask me what my work is, I say fun. They ask me what my fun is, I say work.",
        "They say the trophy is for remerberance, but really its the game."
    };

    int num_quotes = sizeof(quotes) / sizeof(quotes[0]);

    srand(time(NULL));

    while (1) {
        printf("\nChoose an option:\n");
        printf("1: Get a random quote\n");
        printf("2: Find a quote similar to a word/phrase\n");
        printf("3: Create your own quote\n");
        printf("4: Exit\n");
        printf("5: Tell us what you think\n");

        int choice;
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                int random_index = rand() % num_quotes;
                printf("\nHere's a random quote:\n\"%s\"\n", quotes[random_index]);
                break;
            case 2:
                printf("\nEnter your keyword or phrase:\n");
                char keyword[100];
                scanf("%s", keyword);

                // Implement keyword-based quote search
                int best_match_index = -1;
                int best_match_score = 0;
                for (int i = 0; i < num_quotes; i++) {
                    int score = 0;
                    char *p = strstr(quotes[i], keyword);
                    while (p != NULL) {
                        score++;
                        p = strstr(p + 1, keyword);
                    }
                    if (score > best_match_score) {
                        best_match_index = i;
                        best_match_score = score;
                    }
                }

                if (best_match_index != -1) {
                    printf("\nHere's a quote related to \"%s\":\n\"%s\"\n", keyword, quotes[best_match_index]);
                } else {
                    printf("\nNo matching quotes found for \"%s\".\n", keyword);
                }
                break;
            case 3:
                printf("\nEnter your quote:\n");
                char custom_quote[256];
                scanf(" %[^\n]", custom_quote);

                // Check if quote limit is reached
                if (num_quotes >= MAX_QUOTES) {
                    printf("\nQuote limit reached.\n");
                    break;
                }

                // Check if quote is too long
                if (strlen(custom_quote) >= 256) {
                    printf("\nQuote is too long.\n");
                    break;
                }

                strcpy(quotes[num_quotes], custom_quote);
                num_quotes++;
                printf("\nYour quote has been added.\n");
                break;
            case 4:
                printf("Exiting...Please come back soon... or else\n");
                printf("'Pain is temporary. Quitting lasts forever. - Lance Armstrong Sally Jenkins'");
         case 5:
                printf("Leave your feedback here: ");
             char feedback[100];
                scanf("%[^\n]", feedback);
                printf("\nThank you for your feedback!", feedback);
                break;
                printf("Invalid choice. Please enter 1, 2, 3, or 4.\n");
        }
    }
}
